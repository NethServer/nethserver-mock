#!/bin/bash

#
# Copyright (C) 2014 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

set -e

specfile=$1
tmpfiles=()

export LANG=C
export dist=${dist:-ns7}
export mockcfg=${mockcfg:-nethserver-7-x86_64}

if [ -z "${specfile}" ]; then
    exec >&2
    echo "Build RPMs with mock"
    echo ""
    echo "Usage: " 
    echo "    " $(basename $0) "filename.spec"
    echo ""
    echo "Sensible to the following environment variables:"
    echo " - dist (${dist})"
    echo " - mockcfg (${mockcfg})"
    echo ""
    exit 1
fi

export GIT_DIR=${GIT_DIR:-`dirname ${specfile}`/.git}

function have_git() {
    which git &>/dev/null && [ -d "${GIT_DIR}" ]
}

function cleanup() {
    if [[ ${#tmpfiles[@]} > 0 ]]; then
        echo "Cleaning up temporary files.."
	rm -vf "${tmpfiles[@]}"
    fi
}

function prepend_git_changelog() {
    local commitn=$1
    local specfile=$2
    local tmplog=$(mktemp  "$(dirname ${specfile})"/.tmpXXXXXXX.gitlog)
    tmpfiles+=("${tmplog}")
    (
         changelog_date=$(LANG=en date +"%a %b %d %Y")
         packager_name=$(git config --get user.name)
         packager_email=$(git config --get user.email)
         echo "* ${changelog_date} ${packager_name} <${packager_email}> - ${dist}"
         git --no-pager log --format='- %s (%an <%ae>)' -n "${commitn}"
    ) | sed 's/%/%%/g;' > ${tmplog}

    sed -i $'/^%changelog/ {\nr '${tmplog}$'\nq\n}' ${specfile}
}

trap cleanup EXIT SIGTERM


if have_git; then
    gitdesc=($(git describe --tags --match "[0-9]*" --abbrev=7 HEAD 2>/dev/null | tr '-' ' '))
else
    gitdesc=()
fi

if [ "${#gitdesc[@]}" -gt 2 ]; then
    commitn=${gitdesc[$((${#gitdesc[@]} - 2))]}
    commitv=${gitdesc[((${#gitdesc[@]} - 1))]}
    dist="${commitn}.${commitv}.${dist}"

    tmpspec=$(mktemp  "$(dirname ${specfile})"/.tmpXXXXXXX.spec)
    tmpfiles+=("${tmpspec}")
    cp -f "${specfile}" "${tmpspec}"
    prepend_git_changelog ${commitn} ${tmpspec}
    specfile=${tmpspec}
    echo `basename $0` "[INFO] git describe: ${gitdesc[*]}" >&2               
else
    echo "" >&2
fi

make-srpm ${specfile}
srpm=$(basename "$(grep '^Wrote: ' build.log | tail -1 )")
mock -D "dist .${dist}" \
     --resultdir=. -r ${mockcfg} ${srpm}

